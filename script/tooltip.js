const infoIcons = document.getElementsByClassName("info-label");
for (const info of infoIcons) {
  info.addEventListener("click", () => {
    const key = info.getAttribute("data");
    showAlert(toolTips[key]);
  });
}

const TOOLTIP_QUERY = `
Enter your query here. Include placeholders to dynamically replace values in the string. For example, use placeholders like <b><code>{placeholder_name}</code></b> to represent dynamic content that will be replaced during output generation.<br><br>
<b>i.e.</b><pre><code>INSERT INTO employee (  emp_id,                                emp_name,     address,     dob,     designation     )
VALUES               ( (SELECT MAX(emp_id) + 1 FROM employee), '<b>{emp_name}</b>', '<b>{address}</b>', '<b>{dob}</b>', '<b>{designation}</b>' );
</code></pre><br>
`;
const TOOLTIP_DATA = `This field is used to input the data that you want to dynamically insert into the <b>Query String.</b> The data should be provided as a string, with a <b>specific delimiter</b> used to separate different values. It can include multiline data. Ensure to use the correct delimiter for accurate parsing of your data.<br><br><b>For example:</b><br><code>Urvesh$Gujarat, India$01/01/2001$Software Engineer</code><br>In this example, data is separated with <b>'$'</b>.`;
const TOOLTIP_DELIMITER = `
Specify the delimiter for your data. Delimiters are characters or strings used to separate different values in your data. Common delimiters include commas<b>(,)</b>, dollar<b>($)</b>, semicolons<b>(;)</b>, and hash<b>(#)</b>. Choose the appropriate delimiter to ensure accurate parsing of your data.
`;
const TOOLTIP_ITERATION_MODE = `
This field determines the type of processing for the output. There are two modes available:<br><br>
<b>1. Normal: </b>If the field is not checked, the output will be directly generated by directly replacing the placeholder data in the query.<br>
<b>2. Iterative:</b> In this mode, the output will iteratively generate the result based on the index obtained after splitting the data with the specified delimiter. Each value separated by the delimiter will be processed iteratively according to its index, starting from index <b>0</b>.<br><br>
Choose the appropriate mode based on your requirements for processing the output.
`;
const TOOLTIP_PLACEHOLDERS = `Placeholders are variables that represent values that can change dynamically. They are automatically detected from the <b>Query</b> input. It will be define using <b><code>{placeholder_name}</code></b>.`;
const toolTips = {
  query: TOOLTIP_QUERY,
  data: TOOLTIP_DATA,
  delimiter: TOOLTIP_DELIMITER,
  "iteration-mode": TOOLTIP_ITERATION_MODE,
  placeholders: TOOLTIP_PLACEHOLDERS,
};
